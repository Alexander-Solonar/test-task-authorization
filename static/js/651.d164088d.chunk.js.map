{"version":3,"file":"static/js/651.d164088d.chunk.js","mappings":"gOACA,EAA4B,6BAA5B,EAAgE,wBAAhE,EAAgG,yBAAhG,EAAiI,yBAAjI,EAAkK,yBAAlK,EAAoM,0B,SCKhMA,GAASC,EAAAA,EAAAA,IAAO,CAClBC,UAAUC,EAAAA,EAAAA,MAASC,OAAOC,SAAS,gCACnCC,UAAUH,EAAAA,EAAAA,MAASC,OAAOC,SAAS,kCAG/BE,EAAY,SAAHC,GAAkB,IAAZC,EAAID,EAAJC,KACnB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CACXF,KAAMA,EACNG,OAAQ,SAAAC,GAAO,OAAIH,EAAAA,EAAAA,KAAA,KAAGI,UAAWC,EAAUC,SAAEH,GAAY,GAG/D,EAkDA,EAhDkB,WAChB,IAIMI,GAAWC,EAAAA,EAAAA,MAOjB,OACEC,EAAAA,EAAAA,MAAA,OAAKL,UAAWC,EAAcC,SAAA,EAC5BN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,YACJN,EAAAA,EAAAA,KAACU,EAAAA,GAAM,CACLC,cAfgB,CACpBnB,SAAU,GACVI,SAAU,IAcNgB,iBAAkBtB,EAClBuB,SAXe,SAACC,EAAQC,GAC5BR,GAASS,EAAAA,EAAAA,GAAMF,IACfC,EAAQE,WACV,EAQ6BX,UAEvBG,EAAAA,EAAAA,MAACS,EAAAA,GAAI,CAACd,UAAWC,EAASC,SAAA,EACxBG,EAAAA,EAAAA,MAAA,OAAKL,UAAWC,EAAUC,SAAA,EACxBN,EAAAA,EAAAA,KAACmB,EAAAA,GAAK,CACJf,UAAWC,EACXe,KAAK,OACLrB,KAAK,WACLsB,YAAY,cAEdrB,EAAAA,EAAAA,KAACH,EAAS,CAACE,KAAK,iBAElBU,EAAAA,EAAAA,MAAA,OAAKL,UAAWC,EAAUC,SAAA,EACxBN,EAAAA,EAAAA,KAACmB,EAAAA,GAAK,CACJf,UAAWC,EACXe,KAAK,WACLrB,KAAK,WACLsB,YAAY,cAEdrB,EAAAA,EAAAA,KAACH,EAAS,CAACE,KAAK,iBAElBC,EAAAA,EAAAA,KAAA,UAAQI,UAAWC,EAAYe,KAAK,SAAQd,SAAC,kBAOvD,ECxDA,EARc,WACZ,OACEN,EAAAA,EAAAA,KAAA,OAAAM,UACEN,EAAAA,EAAAA,KAACsB,EAAS,KAGhB,C","sources":["webpack://test-task-authorization/./src/components/loginForm/LoginForm.module.css?a6c9","components/loginForm/LoginForm.js","pages/login/Login.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LoginForm_container__eY+pb\",\"form\":\"LoginForm_form__WVgj1\",\"label\":\"LoginForm_label__X9EMX\",\"input\":\"LoginForm_input__wW5K4\",\"error\":\"LoginForm_error__586OB\",\"button\":\"LoginForm_button__vj7zv\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/operations';\nimport css from './LoginForm.module.css';\n\nlet schema = object({\n  username: string().trim().required('Username is a required field'),\n  password: string().trim().required('Password is a required field'),\n});\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <p className={css.error}>{message}</p>}\n    />\n  );\n};\n\nconst LoginForm = () => {\n  const initialValues = {\n    username: '',\n    password: '',\n  };\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n    dispatch(login(values));\n    actions.resetForm();\n  };\n\n  return (\n    <div className={css.container}>\n      <h1>Log in</h1>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form className={css.form}>\n          <div className={css.label}>\n            <Field\n              className={css.input}\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Username\"\n            />\n            <FormError name=\"username\" />\n          </div>\n          <div className={css.label}>\n            <Field\n              className={css.input}\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n            />\n            <FormError name=\"password\" />\n          </div>\n          <button className={css.button} type=\"submit\">\n            Log in\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/loginForm/LoginForm';\n\nconst Login = () => {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["schema","object","username","string","trim","required","password","FormError","_ref","name","_jsx","ErrorMessage","render","message","className","css","children","dispatch","useDispatch","_jsxs","Formik","initialValues","validationSchema","onSubmit","values","actions","login","resetForm","Form","Field","type","placeholder","LoginForm"],"sourceRoot":""}